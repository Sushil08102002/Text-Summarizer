{"creates":
{"Update_Task":
{"key":
"Update_Task",
"operation":
{"inputFields":
[
    {"key":"task","label":"Select Task","type":"dropdown","required":true,"list":false,"altersDynamicFields":false,
    "source":"let config = {\r\n method: 'get',\r\n maxBodyLength: Infinity,\r\n url: 'https://api.todoist.com/rest/v2/tasks',\\r\\n headers: { \r\n  'Authorization': Bearer ${context.authData.accesstokencode.access_token}}\r\n};\r\n\r\nconst response = await axios.request(config)\r\nconst array = response.data.map(subs => ({\r\n label: subs.content,\r\n sample : subs.id,\r\n value: subs.id +\" \"+subs.project_id\r\n}));\r\nreturn array;","help":"Select a existing task"}
    ,{"key":"details","type":"input groups","required":true,"children":[{"key":"content","label":"Title","type":"string","required":true,"list":false,"altersDynamicFields":false,"help":"New updated title"},
    {"key":"assignee_id","label":"Assign To","type":"dropdown","required":false,"list":false,"altersDynamicFields":false,"source":"const inputString = ${context.inputData.task}\r\nconst wordsArray = inputString.split(\" \");\r\nconst firstWord = wordsArray[0];\r\nconst secondWord = wordsArray[1];\r\n\r\nlet config = {\r\n method: 'get',\r\n maxBodyLength: Infinity,\r\n url: https://api.todoist.com/rest/v2/projects/${secondWord}/collaborators,\\r\\n headers: { \r\n  'Authorization': Bearer ${context.authData.accesstokencode.access_token}\r\n }\r\n};\r\nconst response = await axios.request(config)\r\nconst array = response.data.map(subs => ({label: subs.email, sample: subs.name,value: subs.id}));\r\nreturn array","help":"Assign this task to the selected person."},
    {"key":"priority","label":"Priority","type":"dropdown","required":false,"list":false,"altersDynamicFields":false,"help":"Task priority from 1 (normal) to 4 (urgent)","children":[{"label":"Natutal","value":"1","sample":"1"},{"label":"Elevated","value":"2","sample":"2"},{"label":"Important","value":"3","sample":"3"},{"label":"Urgent","value":"4","sample":"4"}]},{"key":"due_string","label":"due_string","type":"string","required":false,"list":false,"altersDynamicFields":false,"help":"Supports human readable dates like today or next friday. Read full datetime help here. If you are passing along a date from another calendar or todo system, you might try Due Date (Raw Formatted) instead!"},
    {"key":"due_date","label":"Due_date","type":"string","required":false,"list":false,"altersDynamicFields":false,"help":"This is a field that will get interpreted directly before being sent to Todoist, best used when using a datetime value from another calendar or todo system!"},
    {"key":"labels","label":"Label","type":"dropdown","required":false,"list":false,"altersDynamicFields":false,"source":"let config = {\r\n method: 'get',\r\n maxBodyLength: Infinity,\r\n url: 'https://api.todoist.com/rest/v2/labels',\\r\\n headers: { \r\n  'Authorization': Bearer ${context.authData.accesstokencode.access_token}}\r\n};\r\nconst response = await axios.request(config)\r\nconst array = response.data.map(subs => ({\r\n label: subs.name,\r\n sample : subs.id,\r\n value: subs.name\r\n}));\r\nreturn array;","help":"Any labels to add to this new task."}]}],
    "type":"hook","perform":{"source":"// return context\r\nconst inputString = ${context?.inputData?.task}\r\nconst wordsArray = inputString.split(\" \");\r\nconst firstWord = wordsArray[0];\r\n\r\n// let data = JSON.stringify({\r\n//  \"content\": ${context.inputData.details.content},\r\n//  \"priority\": ${context.inputData.details.priority},\r\n//  \"due_string\": ${context.inputData.details.due_string},\r\n//  \"due_date\": ${context.inputData.details.due_date},\r\n//  \"labels\" : [${context.inputData.details.label}],\r\n//  \"assignee_id\" : ${context.inputData.details.assign}\r\n// });\r\n\r\nlet data = context.inputData.details\r\nlet config = {\r\n method: 'post',\r\n maxBodyLength: Infinity,\r\n url: https://api.todoist.com/rest/v2/tasks/${firstWord},\\r\\n headers: { \r\n  'Content-Type': 'application/json', \r\n  'Authorization': Bearer ${context.authData.accesstokencode.access_token}\r\n },\r\n data : data\r\n};\r\ntry{\r\nconst response = await axios.request(config)\r\nreturn response.data\r\n}catch(Error){\r\n  throw Error\r\n}"},"inputJson":{"steps":{"root":["task","details"],"details":["details.content","details.description","details.assign","details.priority","details.due_string","details.due_date","details.label"]},"blocks":{"task":{"key":"task","label":"Select Task","type":"dropdown","required":true,"source":"let config = {\r\n method: 'get',\r\n maxBodyLength: Infinity,\r\n url: 'https://api.todoist.com/rest/v2/tasks',\\r\\n headers: { \r\n  'Authorization': Bearer ${context.authData.accesstokencode.access_token}}\r\n};\r\n\r\nconst response = await axios.request(config)\r\nconst array = response.data.map(subs => ({\r\n label: subs.content,\r\n sample : subs.id,\r\n value: subs.id\r\n}));\r\nreturn array;","help":"select the task.","dependsOn":[]},"details.content":{"key":"details.content","label":"Title","type":"string","required":true,"help":"New updated title","dependsOn":[]},"details.description":{"key":"details.description","label":"Description","type":"string","required":true,"help":"New updated Description","dependsOn":[]},"details.assign":{"key":"details.assign","label":"Assign To","type":"dropdown","required":true,"source":"let config = {\r\n method: 'get',\r\n maxBodyLength: Infinity,\r\n url: 'https://api.todoist.com/rest/v2/labels',\\r\\n headers: { \r\n  'Authorization': Bearer ${context.authData.accesstokencode.access_token}}\r\n};\r\nconst response = await axios.request(config)\r\nconst array = response.data.map(subs => ({\r\n label: subs.name,\r\n sample : subs.id,\r\n value: subs.name\r\n}));\r\nreturn array;","help":"Assign this task to the selected person","dependsOn":[]},"details.priority":{"key":"details.priority","label":"Priority","type":"string","required":true,"help":"The priority of the task (this is usually a number between 1 and 4).","dependsOn":[]},"details.due_string":{"key":"details.due_string","label":"due_string","type":"string","required":true,"help":"Supports human readable dates like today or next friday. Read full datetime help here. If you are passing along a date from another calendar or todo system, you might try Due Date (Raw Formatted) instead!","dependsOn":[]},"details.due_date":{"key":"details.due_date","label":"Due_date","type":"string","required":true,"help":"This is a field that will get interpreted directly before being sent to Todoist, best used when using a datetime value from another calendar or todo system!","dependsOn":[]},"details.label":{"key":"details.label","label":"Label","type":"dropdown","required":true,"source":"let config = {\r\n method: 'get',\r\n maxBodyLength: Infinity,\r\n url: 'https://api.todoist.com/rest/v2/labels',\\r\\n headers: { \r\n  'Authorization': Bearer ${context.authData.accesstokencode.access_token}}\r\n};\r\nconst response = await axios.request(config)\r\nconst array = response.data.map(subs => ({\r\n label: subs.name,\r\n sample : subs.id,\r\n value: subs.name\r\n}));\r\nreturn array;","help":"Any labels to add to this new task.","dependsOn":[]},"details":{"key":"details","type":"input groups","label":"Update Task","required":false,"dependsOn":[]}}}}}}}